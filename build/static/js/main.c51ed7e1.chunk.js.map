{"version":3,"sources":["Services/Service.js","Component/ApprovedReviewList.js","Component/RejectedReviewList.js","Component/ApprovedApplicantList.js","Component/BlockedApplicantList.js","App.js","reportWebVitals.js","index.js"],"names":["STUDENT_API_BASE_URL","axios","get","id","reviewStatus","put","ApprovedReviewList","props","rejectReview","bind","state","reviews","DataService","getApprovedReviews","then","res","setState","data","updateReview","response","console","log","window","location","reload","catch","e","this","className","map","review","reviewstars","reviewDescription","reviewDate","type","onClick","Component","RejectedReviewList","approveReview","getBlockedReviews","ApprovedApplicantList","rejectApplicant","applicants","getApprovedApplicants","updateApplicant","user","firstName","lastName","r","RejectedApplicantList","approveApplicant","getBlockedApplicants","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c51ed7e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst STUDENT_API_BASE_URL = \"http://localhost:8080/api/webadmin\";\r\n\r\nclass DataService {\r\n  getApplicants() {\r\n    return axios.get(STUDENT_API_BASE_URL+\"/list/applicant\");\r\n  }\r\n  getApprovedApplicants() {\r\n    return axios.get(STUDENT_API_BASE_URL+\"/list/applicant/approve\");\r\n  }\r\n  getBlockedApplicants() {\r\n    return axios.get(STUDENT_API_BASE_URL+\"/list/applicant/block\");\r\n  }\r\n  updateApplicant(id, reviewStatus) {\r\n    return axios.put(STUDENT_API_BASE_URL+\"/list/applicant/\"+id+\"/\"+reviewStatus);\r\n  }\r\n  getReviews() {\r\n    return axios.get(STUDENT_API_BASE_URL+\"/list/reviews/rejected\");\r\n  }\r\n  getApprovedReviews() {\r\n    return axios.get(STUDENT_API_BASE_URL+\"/list/reviews/approved\");\r\n  }\r\n  getBlockedReviews() {\r\n    return axios.get(STUDENT_API_BASE_URL+\"/list/reviews/rejected\");\r\n  }\r\n  updateReview(id, reviewStatus) {\r\n    return axios.put(STUDENT_API_BASE_URL+\"/list/reviews/\"+id+\"/\"+reviewStatus);\r\n  }\r\n}\r\n\r\nexport default new DataService();\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../Services/Service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n  export default class ApprovedReviewList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.rejectReview = this.rejectReview.bind(this);\r\n      \r\n      this.state = {\r\n        reviews: []\r\n      };\r\n    }\r\n\r\n  componentDidMount() {\r\n    DataService.getApprovedReviews().then((res) =>{\r\n      this.setState({reviews:res.data});\r\n    });\r\n  }\r\n\r\n  rejectReview(id){\r\n\r\n    DataService.updateReview(\r\n      id,\"Blocked\"            \r\n  )\r\n      .then(response => {\r\n          console.log(response.data);\r\n          //this.props.history.push('ApprovedReviewList')\r\n          window.location.reload();\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n  }\r\n\r\n  render(){\r\n    const{reviews} = this.state;\r\n    return(\r\n      <div>\r\n        <h2 className=\"text-center\">Approved Review List</h2>\r\n        <div className=\"row\">\r\n          <table className = \"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Review ID</th>\r\n                <th>Review Stars</th>\r\n                <th>Review Description</th>\r\n                <th>Review Date</th>\r\n                <th>Review User</th>\r\n                <th>Review Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                this.state.reviews.map(review => \r\n                <tr key = {review.id}>\r\n                  <td>{review.id}</td>\r\n                  <td>{review.reviewstars}</td>\r\n                  <td>{review.reviewDescription}</td>\r\n                  <td>{review.reviewDate}</td>\r\n                  <td>{review.reviewStatus}</td>\r\n                  <td><button className=\"btn btn-primary\" type = \"button\" onClick = {(e)=>this.rejectReview(review.id)}>Reject</button></td>\r\n                </tr>  \r\n                  )\r\n              }\r\n            </tbody>\r\n  \r\n          </table>\r\n        </div>\r\n  \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../Services/Service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n  export default class RejectedReviewList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.approveReview = this.approveReview.bind(this);\r\n      \r\n      this.state = {\r\n        reviews: []\r\n      };\r\n    }\r\n\r\n  componentDidMount() {\r\n    DataService.getBlockedReviews().then((res) =>{\r\n      this.setState({reviews:res.data});\r\n    });\r\n  }\r\n\r\n  approveReview(id){\r\n\r\n    DataService.updateReview(\r\n      id,\"Approved\"            \r\n  )\r\n      .then(response => {\r\n          console.log(response.data);\r\n          //this.props.history.push('RejectedReviewList')\r\n          window.location.reload();\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n  }\r\n\r\n  render(){\r\n    const{reviews} = this.state;\r\n    return(\r\n      <div>\r\n        <h2 className=\"text-center\">Rejected Review List</h2>\r\n        <div className=\"row\">\r\n          <table className = \"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Review ID</th>\r\n                <th>Review Stars</th>\r\n                <th>Review Description</th>\r\n                <th>Review Date</th>\r\n                <th>Review User</th>\r\n                <th>Review Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                this.state.reviews.map(review => \r\n                <tr key = {review.id}>\r\n                  <td>{review.id}</td>\r\n                  <td>{review.reviewstars}</td>\r\n                  <td>{review.reviewDescription}</td>\r\n                  <td>{review.reviewDate}</td>\r\n                  <td>{review.reviewStatus}</td>\r\n                  <td><button className=\"btn btn-primary\" type = \"button\" onClick = {(e)=>this.approveReview(review.id)}>Approve</button></td>\r\n                </tr>  \r\n                  )\r\n              }\r\n            </tbody>\r\n  \r\n          </table>\r\n        </div>\r\n  \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../Services/Service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n  export default class ApprovedApplicantList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.rejectApplicant = this.rejectApplicant.bind(this);\r\n      \r\n      this.state = {\r\n        applicants: []\r\n      };\r\n    }\r\n\r\n  componentDidMount() {\r\n    DataService.getApprovedApplicants().then((res) =>{\r\n      this.setState({applicants:res.data});\r\n    });\r\n  }\r\n\r\n  rejectApplicant(id){\r\n\r\n    DataService.updateApplicant(\r\n      id,\"Blocked\"            \r\n  )\r\n      .then(response => {\r\n          console.log(response.data);\r\n          //this.props.history.push('ApprovedReviewList')\r\n          window.location.reload();\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n  }\r\n\r\n  render(){\r\n    const{reviews} = this.state;\r\n    return(\r\n      <div>\r\n        <h2 className=\"text-center\">Approved Applicant List</h2>\r\n        <div className=\"row\">\r\n          <table className = \"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Applicant ID</th>\r\n                <th>Applicant Name</th>\r\n                <th>Applicant Reviews</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                this.state.applicants.map(user => \r\n                <tr key = {user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.firstName} {user.lastName}</td>\r\n                  <td>{user.reviews.map(r =>\r\n                    <div key = {r.id}>\r\n                      <div>ID: {r.id}</div>\r\n                      <div>Review Description: {r.reviewDescription}</div>\r\n                      </div>)}\r\n                      </td>\r\n                  <td><button className=\"btn btn-primary\" type = \"button\" onClick = {(e)=>this.rejectApplicant(user.id)}>Block</button></td>\r\n                </tr>  \r\n                  )\r\n              }\r\n            </tbody>\r\n  \r\n          </table>\r\n        </div>\r\n  \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataService from \"../Services/Service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n  export default class RejectedApplicantList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.approveApplicant = this.approveApplicant.bind(this);\r\n      \r\n      this.state = {\r\n        applicants: []\r\n      };\r\n    }\r\n\r\n  componentDidMount() {\r\n    DataService.getBlockedApplicants().then((res) =>{\r\n      this.setState({applicants:res.data});\r\n    });\r\n  }\r\n\r\n  approveApplicant(id){\r\n\r\n    DataService.updateApplicant(\r\n      id,\"Approved\"            \r\n  )\r\n      .then(response => {\r\n          console.log(response.data);\r\n          //this.props.history.push('ApprovedReviewList')\r\n          window.location.reload();\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n      });\r\n  }\r\n\r\n  render(){\r\n    const{reviews} = this.state;\r\n    return(\r\n      <div>\r\n        <h2 className=\"text-center\">Blocked Applicant List</h2>\r\n        <div className=\"row\">\r\n          <table className = \"table table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Applicant ID</th>\r\n                <th>Applicant Name</th>\r\n                <th>Applicant Reviews</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                this.state.applicants.map(user => \r\n                <tr key = {user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.firstName} {user.lastName}</td>\r\n                  <td>{user.reviews.map(r =>\r\n                    <div key = {r.id}>\r\n                      <div>ID: {r.id}</div>\r\n                      <div>Review Description: {r.reviewDescription}</div>\r\n                      </div>)}\r\n                      </td>\r\n                  <td><button className=\"btn btn-primary\" type = \"button\" onClick = {(e)=>this.approveApplicant(user.id)}>Approve</button></td>\r\n                </tr>  \r\n                  )\r\n              }\r\n            </tbody>\r\n  \r\n          </table>\r\n        </div>\r\n  \r\n      </div>\r\n    );\r\n  \r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ApprovedReviewList from './Component/ApprovedReviewList'\r\nimport RejectedReviewList from './Component/RejectedReviewList'\r\nimport ApprovedApplicantList from './Component/ApprovedApplicantList'\r\nimport RejectedApplicantList from './Component/BlockedApplicantList'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li>\r\n              SA52 Demo\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/ApprovedApplicantList\"} className=\"nav-link\">\r\n                Approved Applicants\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/RejectedApplicantList\"} className=\"nav-link\">\r\n                Blocked Applicants\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/ApprovedReviewList\"} className=\"nav-link\">\r\n                Approved Reviews \r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/RejectedReviewList\"} className=\"nav-link\">\r\n                Rejected Reviews \r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n        </div>\r\n        <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path='/ApprovedReviewList' component={ApprovedReviewList} />\r\n          <Route exact path='/RejectedReviewList' component={RejectedReviewList} />\r\n          <Route exact path='/ApprovedApplicantList' component={ApprovedApplicantList} />\r\n          <Route exact path='/RejectedApplicantList' component={RejectedApplicantList} />\r\n        </Switch>\r\n</div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}